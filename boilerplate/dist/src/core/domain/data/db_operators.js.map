{"version":3,"file":"db_operators.js","sourceRoot":"","sources":["../../../../../src/core/domain/data/db_operators.ts"],"names":[],"mappings":"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","sourcesContent":["import { iocContainer } from \"../../../infrastructure/config/ioc\";\nimport { TYPES } from \"../constants/types\";\nimport { IFunctionQuery } from \"./function_query\";\n\nexport const and = (...operands: any[]) => {\n    const functionQuery = iocContainer.get<IFunctionQuery>(TYPES.FunctionQuery);\n    return functionQuery.and(...operands);\n};\n\nexport const or = (...operands: any[]) => {\n    const functionQuery = iocContainer.get<IFunctionQuery>(TYPES.FunctionQuery);\n    return functionQuery.or(...operands);\n};\n\nexport const ne = (operand: any) => {\n    const functionQuery = iocContainer.get<IFunctionQuery>(TYPES.FunctionQuery);\n    return functionQuery.ne(operand);\n};\n\nexport const lt = (operand: any) => {\n    const functionQuery = iocContainer.get<IFunctionQuery>(TYPES.FunctionQuery);\n    return functionQuery.lt(operand);\n};\n\nexport const lte = (operand: any) => {\n    const functionQuery = iocContainer.get<IFunctionQuery>(TYPES.FunctionQuery);\n    return functionQuery.lte(operand);\n};\n\nexport const gt = (operand: any) => {\n    const functionQuery = iocContainer.get<IFunctionQuery>(TYPES.FunctionQuery);\n    return functionQuery.lt(operand);\n};\n\nexport const gte = (operand: any) => {\n    const functionQuery = iocContainer.get<IFunctionQuery>(TYPES.FunctionQuery);\n    return functionQuery.gte(operand);\n};\n\nexport const isIn = (...operands: any[]) => {\n    const functionQuery = iocContainer.get<IFunctionQuery>(TYPES.FunctionQuery);\n    return functionQuery.in(...operands);\n};\n\nexport const inc = (data: { [key: string]: number }) => {\n    const functionQuery = iocContainer.get<IFunctionQuery>(TYPES.FunctionQuery);\n    return functionQuery.inc(data);\n};\n\nexport const mul = (data: { [key: string]: number }) => {\n    const functionQuery = iocContainer.get<IFunctionQuery>(TYPES.FunctionQuery);\n    return functionQuery.mul(data);\n};\n\nexport const set = (data: {\n    [key: string]: boolean | string | number | object;\n}) => {\n    const functionQuery = iocContainer.get<IFunctionQuery>(TYPES.FunctionQuery);\n    return functionQuery.set(data);\n};\n\nexport const unset = (data: {\n    [key: string]: boolean | string | number | object;\n}) => {\n    const functionQuery = iocContainer.get<IFunctionQuery>(TYPES.FunctionQuery);\n    return functionQuery.unset(data);\n};\n"]}