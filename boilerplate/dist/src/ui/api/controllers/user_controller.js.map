{"version":3,"file":"user_controller.js","sourceRoot":"","sources":["../../../../../src/ui/api/controllers/user_controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yDAAiD;AACjD,0EAA2C;AAC3C,+BAUc;AACd,4DAA8E;AAC9E,uCAAwC;AAExC,oDAI+B;AAC/B,8DAA0D;AAC1D,uDAAmD;AAMnD,IAAa,cAAc,sBAA3B,MAAa,cAAe,SAAQ,gCAAc;IAKjC,UAAU,CAAS,KAAsB;;YAClD,MAAM,IAAI,CAAC,eAAe,CAAC,gCAAY,CAAC,0BAAe,EAAE,KAAK,CAAC,CAAC,CAAC;YACjE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACnD,OAAO,gCAAY,CAAC,kBAAO,EAAE,IAAI,EAAE;gBAC/B,wBAAwB,EAAE,IAAI;gBAC9B,uBAAuB,EAAE,IAAI;aAChC,CAAC,CAAC;QACP,CAAC;KAAA;IAGY,UAAU,CACnB,EAAU,EACF,KAAsB;;YAE9B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK;gBAAE,OAAO,IAAI,CAAC,SAAS,CAAC,2BAAU,CAAC,UAAU,CAAC,CAAC;YACzD,MAAM,IAAI,CAAC,eAAe,CAAC,gCAAY,CAAC,0BAAe,EAAE,KAAK,CAAC,CAAC,CAAC;YACjE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1C,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,iCAAM,KAAK,KAAE,EAAE,IAAG,CAAC;QACrD,CAAC;KAAA;IAGY,OAAO,CAAC,EAAU;;YAC3B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YACnB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACjD,IAAI,IAAI;gBACJ,OAAO,gCAAY,CAAC,kBAAO,EAAE,IAAI,EAAE;oBAC/B,wBAAwB,EAAE,IAAI;oBAC9B,uBAAuB,EAAE,IAAI;iBAChC,CAAC,CAAC;YACP,MAAM,IAAI,iBAAS,CAAC,2BAAU,CAAC,SAAS,CAAC,CAAC;QAC9C,CAAC;KAAA;IAGY,QAAQ,CACR,SAAkB,EAClB,IAAa,EACb,KAAc;;YAEvB,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;gBAC9D,SAAS;gBACT,IAAI,EAAE,IAAI,IAAI,CAAC;gBACf,KAAK,EAAE,KAAK,IAAI,EAAE;aACrB,CAAC,CAAC;YACH,MAAM,KAAK,GAAG,gCAAY,CAAC,kBAAO,EAAE,KAAK,EAAE;gBACvC,wBAAwB,EAAE,IAAI;gBAC9B,uBAAuB,EAAE,IAAI;aAChC,CAAC,CAAC;YACH,OAAO;gBACH,UAAU;gBACV,KAAK,EAAE,KAAK;aACf,CAAC;QACN,CAAC;KAAA;IAGY,UAAU,CAAC,EAAU;;YAC9B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YACnB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACrD,IAAI,CAAC,SAAS;gBAAE,IAAI,CAAC,SAAS,CAAC,2BAAU,CAAC,SAAS,CAAC,CAAC;QACzD,CAAC;KAAA;CACJ,CAAA;AAhEwB;IAApB,YAAM,CAAC,0BAAW,CAAC;;oDAA6C;AAIjE;IAFC,WAAI,EAAE;IACN,eAAQ,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,CAAC;IACX,WAAA,WAAI,EAAE,CAAA;;qCAAQ,0BAAe;;gDAOrD;AAGD;IAFC,UAAG,CAAC,MAAM,CAAC;IACX,eAAQ,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,CAAC;IAG/B,WAAA,WAAI,EAAE,CAAA;;6CAAQ,0BAAe;;gDAOjC;AAGD;IAFC,UAAG,CAAC,MAAM,CAAC;IACX,eAAQ,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,CAAC;;;;6CAUnC;AAGD;IAFC,UAAG,EAAE;IACL,eAAQ,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,CAAC;IAE/B,WAAA,YAAK,EAAE,CAAA;IACP,WAAA,YAAK,EAAE,CAAA;IACP,WAAA,YAAK,EAAE,CAAA;;;;8CAeX;AAGD;IAFC,aAAM,CAAC,MAAM,CAAC;IACd,eAAQ,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,CAAC;;;;gDAKnC;AAhEQ,cAAc;IAH1B,WAAI,CAAC,OAAO,CAAC;IACb,YAAK,CAAC,OAAO,CAAC;IACd,sBAAgB,CAAC,gBAAc,CAAC;GACpB,cAAc,CAiE1B;AAjEY,wCAAc","sourcesContent":["import { plainToClass } from \"class-transformer\";\nimport httpStatus from \"http-status-codes\";\nimport {\n    Body,\n    Delete,\n    Get,\n    Post,\n    Put,\n    Route,\n    Security,\n    Tags,\n    Query\n} from \"tsoa\";\nimport { inject, provideSingleton } from \"../../../infrastructure/config/ioc\";\nimport { HttpError } from \"../../error\";\nimport { IUserService } from \"../../../core/domain/services/user_service\";\nimport {\n    UserDto,\n    UserSignUpInput,\n    UserUpdateInput\n} from \"../../models/user_dto\";\nimport { UserService } from \"../../services/user_service\";\nimport { BaseController } from \"./base_controller\";\nimport { PagedResultDto } from \"../../models/base_dto\";\n\n@Tags(\"Users\")\n@Route(\"users\")\n@provideSingleton(UserController)\nexport class UserController extends BaseController {\n    @inject(UserService) private readonly _userService: IUserService;\n\n    @Post()\n    @Security(\"X-Auth-Token\", [\"admin\"])\n    public async createUser(@Body() input: UserSignUpInput): Promise<UserDto> {\n        await this.checkBadRequest(plainToClass(UserSignUpInput, input));\n        const user = await this._userService.create(input);\n        return plainToClass(UserDto, user, {\n            enableImplicitConversion: true,\n            excludeExtraneousValues: true\n        });\n    }\n    @Put(\"{id}\")\n    @Security(\"X-Auth-Token\", [\"admin\"])\n    public async updateUser(\n        id: string,\n        @Body() input: UserUpdateInput\n    ): Promise<void> {\n        this.checkUUID(id);\n        if (!input) return this.setStatus(httpStatus.NO_CONTENT);\n        await this.checkBadRequest(plainToClass(UserUpdateInput, input));\n        input = JSON.parse(JSON.stringify(input));\n        await this._userService.update({ ...input, id });\n    }\n    @Get(\"{id}\")\n    @Security(\"X-Auth-Token\", [\"admin\"])\n    public async getUser(id: string): Promise<UserDto> {\n        this.checkUUID(id);\n        const user = await this._userService.get({ id });\n        if (user)\n            return plainToClass(UserDto, user, {\n                enableImplicitConversion: true,\n                excludeExtraneousValues: true\n            });\n        throw new HttpError(httpStatus.NOT_FOUND);\n    }\n    @Get()\n    @Security(\"X-Auth-Token\", [\"admin\"])\n    public async getUsers(\n        @Query() searchStr?: string,\n        @Query() skip?: number,\n        @Query() limit?: number\n    ): Promise<PagedResultDto<UserDto>> {\n        const { totalCount, items } = await this._userService.pagedGetAll({\n            searchStr,\n            skip: skip || 0,\n            limit: limit || 50\n        });\n        const users = plainToClass(UserDto, items, {\n            enableImplicitConversion: true,\n            excludeExtraneousValues: true\n        });\n        return {\n            totalCount,\n            items: users\n        };\n    }\n    @Delete(\"{id}\")\n    @Security(\"X-Auth-Token\", [\"admin\"])\n    public async deleteUser(id: string) {\n        this.checkUUID(id);\n        const isDeleted = await this._userService.delete(id);\n        if (!isDeleted) this.setStatus(httpStatus.NOT_FOUND);\n    }\n}\n"]}