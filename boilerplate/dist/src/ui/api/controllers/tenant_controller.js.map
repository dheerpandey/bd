{"version":3,"file":"tenant_controller.js","sourceRoot":"","sources":["../../../../../src/ui/api/controllers/tenant_controller.ts"],"names":[],"mappings":"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","sourcesContent":["import http from \"http\";\nimport { plainToClass } from \"class-transformer\";\nimport httpStatus from \"http-status-codes\";\nimport { inject } from \"inversify\";\nimport {\n    Body,\n    Delete,\n    Get,\n    Post,\n    Route,\n    Security,\n    Tags,\n    Response,\n    Put,\n    Query\n} from \"tsoa\";\nimport { provideSingleton } from \"../../../infrastructure/config/ioc\";\nimport { isIdValid } from \"../../../infrastructure/utils/server_utils\";\nimport { HttpError } from \"../../error\";\nimport { ITenantService } from \"../../../core/domain/services/tenant_service\";\nimport {\n    CreateTenantInput,\n    TenantDto,\n    TenantUpdateInput\n} from \"../../models/tenant_dto\";\nimport { TenantService } from \"../../services/tenant_service\";\nimport { BaseController } from \"./base_controller\";\nimport { PagedResultDto } from \"../../models/base_dto\";\n\n@Tags(\"Tenants\")\n@Route(\"tenants\")\n@provideSingleton(TenantController)\nexport class TenantController extends BaseController {\n    @inject(TenantService) private readonly _tenantService: ITenantService;\n\n    @Get(\"{tenantName}\")\n    public async getTenant(tenantName: string): Promise<TenantDto> {\n        const tenant = await this._tenantService.get(tenantName);\n        if (!tenant) throw new HttpError(httpStatus.NOT_FOUND);\n        return tenant;\n    }\n    @Get()\n    @Security(\"X-Auth-Token\", [\"admin\"])\n    public async getTenants(\n        @Query() searchStr?: string,\n        @Query() skip?: number,\n        @Query() limit?: number\n    ): Promise<PagedResultDto<TenantDto>> {\n        const { totalCount, items } = await this._tenantService.pagedGetAll({\n            searchStr,\n            skip: skip || 0,\n            limit: limit || 50\n        });\n        const users = plainToClass(TenantDto, items, {\n            enableImplicitConversion: true,\n            excludeExtraneousValues: true\n        });\n        return {\n            totalCount,\n            items: users\n        };\n    }\n    @Post()\n    @Security(\"X-Auth-Token\", [\"admin\"])\n    @Response(httpStatus.FORBIDDEN, http.STATUS_CODES[httpStatus.FORBIDDEN])\n    public async createTenant(@Body() input: CreateTenantInput) {\n        await this.checkBadRequest(plainToClass(CreateTenantInput, input));\n        await this.checkConflict(await this._tenantService.get(input.name));\n        return this._tenantService.create(input.name, input.description);\n    }\n    @Put(\"{id}\")\n    @Security(\"X-Auth-Token\", [\"admin\"])\n    public async updateTenant(\n        id: string,\n        @Body() input: TenantUpdateInput\n    ): Promise<void> {\n        this.checkUUID(id);\n\n        if (!input) return this.setStatus(httpStatus.NO_CONTENT);\n        await this.checkBadRequest(plainToClass(TenantUpdateInput, input));\n        input = JSON.parse(JSON.stringify(input));\n        await this._tenantService.update({ ...input, id });\n    }\n    @Delete(\"{id}\")\n    @Security(\"X-Auth-Token\", [\"admin\"])\n    public async deleteTenant(id: string): Promise<void> {\n        if (!isIdValid(id))\n            throw new HttpError(\n                httpStatus.BAD_REQUEST,\n                `ID \"${id}\" is invalid`\n            );\n\n        const isDeleted = await this._tenantService.delete(id);\n        if (!isDeleted) this.setStatus(httpStatus.NOT_FOUND);\n    }\n}\n"]}