{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/ui/error/index.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AAExB;;;;GAIG;AACH,MAAa,SAAU,SAAQ,KAAK;IAGhC,YAAY,MAAe,EAAE,OAAgB,EAAE,IAAa;QACxD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAEhD,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,GAAG,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,OAAO;YACR,OAAO;gBACP,cAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC9B,uCAAuC,CAAC;IAChD,CAAC;CACJ;AAdD,8BAcC","sourcesContent":["import http from \"http\";\n\n/**\n * @export\n * @class HttpError\n * @extends {Error}\n */\nexport class HttpError extends Error {\n    readonly status: number;\n\n    constructor(status?: number, message?: string, name?: string) {\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n\n        this.status = status || 500;\n        this.name = name || this.name;\n        this.message =\n            message ||\n            http.STATUS_CODES[this.status] ||\n            \"An error occurred during the request.\";\n    }\n}\n"]}