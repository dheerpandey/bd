{"version":3,"file":"ioc.js","sourceRoot":"","sources":["../../../../src/infrastructure/config/ioc.ts"],"names":[],"mappings":";;AAAA,+EAIsC;AA8BlC,sBAjCA,0CAAW,CAiCA;AACX,kBAhCA,sCAAO,CAgCA;AA9BX,yCAA0D;AAiCtD,iBAjC4B,kBAAM,CAiC5B;AA/BV,MAAM,YAAY,GAAG,IAAI,qBAAS,EAAE,CAAC;AA0BjC,oCAAY;AAxBhB,MAAM,YAAY,GAAG,CACjB,UAI8B,EAC9B,IAAY,EACd,EAAE,CACA,4CAAa,CAAC,UAAU,CAAC;KACpB,eAAe,CAAC,IAAI,CAAC;KACrB,IAAI,CAAC,IAAI,CAAC,CAAC;AAkBhB,oCAAY;AAhBhB,MAAM,gBAAgB,GAAG,CACrB,UAI8B,EAChC,EAAE,CACA,4CAAa,CAAC,UAAU,CAAC;KACpB,gBAAgB,EAAE;KAClB,IAAI,CAAC,IAAI,CAAC,CAAC;AAMhB,4CAAgB","sourcesContent":["import {\n    autoProvide,\n    fluentProvide,\n    provide\n} from \"inversify-binding-decorators\";\nimport { Container, interfaces, inject } from \"inversify\";\n\nconst iocContainer = new Container();\n\nconst provideNamed = (\n    identifier:\n        | string\n        | symbol\n        | interfaces.Newable<any>\n        | interfaces.Abstract<any>,\n    name: string\n) =>\n    fluentProvide(identifier)\n        .whenTargetNamed(name)\n        .done(true);\n\nconst provideSingleton = (\n    identifier:\n        | string\n        | symbol\n        | interfaces.Newable<any>\n        | interfaces.Abstract<any>\n) =>\n    fluentProvide(identifier)\n        .inSingletonScope()\n        .done(true);\n\nexport {\n    iocContainer,\n    autoProvide,\n    provide,\n    provideSingleton,\n    provideNamed,\n    inject\n};\n"]}