{"version":3,"file":"express.js","sourceRoot":"","sources":["../../../../../src/infrastructure/bootstrapping/loaders/express.ts"],"names":[],"mappings":";;;;;AAAA,8DAAqC;AACrC,gDAAwB;AAExB,oDAA4B;AAC5B,sEAA6C;AAC7C,8FAAsF;AAIzE,QAAA,aAAa,GAAG,CAAC,GAAQ,EAAE,EAAE;IACtC,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;QAC7B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;QAC9B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IACH,iFAAiF;IACjF,+DAA+D;IAC/D,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IAE1B,iEAAiE;IACjE,GAAG,CAAC,GAAG,CAAC,cAAI,EAAE,CAAC,CAAC;IAEhB,iGAAiG;IACjG,6BAA6B;IAC7B,GAAG,CAAC,GAAG,CAAC,yBAAc,EAAE,CAAC,CAAC;IAE1B,wBAAwB;IACxB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAEvB,kCAAkC;IAClC,GAAG,CAAC,GAAG,CACH,qBAAU,CAAC,UAAU,CAAC;QAClB,QAAQ,EAAE,IAAI;KACjB,CAAC,CACL,CAAC;IACF,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;IAE3B,8BAA8B;IAC9B,GAAG,CAAC,GAAG,CAAC,gBAAM,EAAE,CAAC,CAAC;IAElB,uCAAuC;IACvC,GAAG,CAAC,GAAG,CAAC,IAAI,0CAAiB,EAAE,CAAC,OAAO,CAAC,CAAC;AAC7C,CAAC,CAAC","sourcesContent":["import bodyParser from \"body-parser\";\nimport cors from \"cors\";\nimport { Express } from \"express\";\nimport helmet from \"helmet\";\nimport methodOverride from \"method-override\";\nimport { RequestMiddleware } from \"../../../ui/api/middleware/interceptor_middleware\";\n\nexport type App = Express;\n\nexport const expressLoader = (app: App) => {\n    app.get(\"/status\", (_req, res) => {\n        res.status(200).end();\n    });\n    app.head(\"/status\", (_req, res) => {\n        res.status(200).end();\n    });\n    // Useful if you're behind a reverse proxy (Heroku, Bluemix, AWS ELB, Nginx, etc)\n    // It shows the real origin IP in the heroku or Cloudwatch logs\n    app.enable(\"trust proxy\");\n\n    // Enable Cross Origin Resource Sharing to all origins by default\n    app.use(cors());\n\n    // \"Lets you use HTTP verbs such as PUT or DELETE in places where the client doesn't support it.\"\n    // Maybe not needed anymore ?\n    app.use(methodOverride());\n\n    // Disable default cache\n    app.set(\"etag\", false);\n\n    // Configure requests body parsing\n    app.use(\n        bodyParser.urlencoded({\n            extended: true\n        })\n    );\n    app.use(bodyParser.json());\n\n    // Adds some security defaults\n    app.use(helmet());\n\n    // Log all requests that hit the server\n    app.use(new RequestMiddleware().handler);\n};\n"]}