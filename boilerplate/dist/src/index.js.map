{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,4BAA0B;AAC1B,kEAA2D;AAC3D,0EAAsF;AACtF,oDAAiD;AACjD,+EAAkF;AAClF,qDAA2D;AAC3D,sEAG6C;AAE7C,SAAsB,WAAW,CAAC,OAAe,EAAE,IAAY;;QAC3D,IAAI;YACA,MAAM,GAAG,GAAG,MAAM,yBAAS,CAAC;gBACxB,YAAY,EAAZ,kBAAY;gBACZ,OAAO;gBACP,gBAAgB,EAAE,CAAC,yCAAsB,CAAC;aAC7C,CAAC,CAAC;YACH,6BAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAC1B,8BAAqB,CAAC,IAAI,CAAC,iCAAiC,IAAI,IAAI,CAAC,CAAC;SACzE;QAAC,OAAO,KAAK,EAAE;YACZ,0BAAW,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,KAAK,CAAC;SACf;IACL,CAAC;CAAA;AAbD,kCAaC;AAED,WAAW,CAAC,eAAM,CAAC,iBAAiB,EAAE,eAAM,CAAC,IAAI,CAAC,CAAC","sourcesContent":["import \"reflect-metadata\";\nimport { bootstrap } from \"./infrastructure/bootstrapping\";\nimport { winstonLoggerInstance } from \"./infrastructure/bootstrapping/loaders/logger\";\nimport { config } from \"./infrastructure/config\";\nimport { referenceDataIoCModule } from \"./infrastructure/config/inversify.config\";\nimport { iocContainer } from \"./infrastructure/config/ioc\";\nimport {\n    exitProcess,\n    startAppServer\n} from \"./infrastructure/utils/server_utils\";\n\nexport async function startServer(connStr: string, port: number) {\n    try {\n        const app = await bootstrap({\n            iocContainer,\n            connStr,\n            containerModules: [referenceDataIoCModule]\n        });\n        startAppServer(app, port);\n        winstonLoggerInstance.info(`✔️  Server listening on port: ${port}\\n`);\n    } catch (error) {\n        exitProcess(error);\n        throw error;\n    }\n}\n\nstartServer(config.mongoDbConnection, config.port);\n"]}